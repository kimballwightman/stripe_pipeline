name: dbt CI/CD Pipeline

on:
  workflow_dispatch:

# on:
#   push:
#     branches: [ main, dev ]
#   pull_request:
#     branches: [ main, dev ]

env:
  DBT_LOCATION: US
  DBT_THREADS: 4
  DBT_TIMEOUT_SECONDS: 300

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-core dbt-bigquery
        
    - name: Set up dbt profiles
      run: |
        mkdir -p ~/.dbt
        cp dbt/stripe_analytics/profiles.yml ~/.dbt/profiles.yml
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        
    - name: Set environment variables for dev
      run: |
        echo "DBT_PROJECT_ID=${{ secrets.DBT_PROJECT_ID }}" >> $GITHUB_ENV
        echo "DBT_DATASET=stripe_dev" >> $GITHUB_ENV
        echo "DBT_TARGET=dev" >> $GITHUB_ENV
        echo "ENVIRONMENT=development" >> $GITHUB_ENV
        
    - name: Create service account key file
      run: |
        echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > /tmp/service-account.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/service-account.json" >> $GITHUB_ENV
        
    - name: dbt debug
      run: |
        cd dbt/stripe_analytics
        dbt debug
        
    - name: dbt deps
      run: |
        cd dbt/stripe_analytics
        dbt deps
        
    - name: dbt compile
      run: |
        cd dbt/stripe_analytics
        dbt compile
        
    - name: dbt test (source tests only)
      run: |
        cd dbt/stripe_analytics
        dbt test --select source:*
        
    - name: dbt run (staging models only)
      run: |
        cd dbt/stripe_analytics
        dbt run --select staging
        
    - name: dbt test (staging models only)
      run: |
        cd dbt/stripe_analytics
        dbt test --select staging
        
    - name: Clean up
      if: always()
      run: |
        rm -f /tmp/service-account.json

  deploy-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-core dbt-bigquery
        
    - name: Set up dbt profiles
      run: |
        mkdir -p ~/.dbt
        cp dbt/stripe_analytics/profiles.yml ~/.dbt/profiles.yml
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        
    - name: Set environment variables for dev
      run: |
        echo "DBT_PROJECT_ID=${{ secrets.DBT_PROJECT_ID }}" >> $GITHUB_ENV
        echo "DBT_DATASET=stripe_dev" >> $GITHUB_ENV
        echo "DBT_TARGET=dev" >> $GITHUB_ENV
        echo "ENVIRONMENT=development" >> $GITHUB_ENV
        
    - name: Create service account key file
      run: |
        echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}' > /tmp/service-account.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/service-account.json" >> $GITHUB_ENV
        
    - name: dbt deps
      run: |
        cd dbt/stripe_analytics
        dbt deps
        
    - name: dbt build (full refresh)
      run: |
        cd dbt/stripe_analytics
        dbt build --full-refresh
        
    - name: dbt docs generate
      run: |
        cd dbt/stripe_analytics
        dbt docs generate
        
    - name: Clean up
      if: always()
      run: |
        rm -f /tmp/service-account.json

  deploy-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-core dbt-bigquery
        
    - name: Set up dbt profiles
      run: |
        mkdir -p ~/.dbt
        cp dbt/stripe_analytics/profiles.yml ~/.dbt/profiles.yml
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_PROD }}
        
    - name: Set environment variables for prod
      run: |
        echo "DBT_PROJECT_ID=${{ secrets.DBT_PROJECT_ID }}" >> $GITHUB_ENV
        echo "DBT_DATASET=stripe_prod" >> $GITHUB_ENV
        echo "DBT_TARGET=prod" >> $GITHUB_ENV
        echo "ENVIRONMENT=production" >> $GITHUB_ENV
        echo "DBT_THREADS=8" >> $GITHUB_ENV
        echo "DBT_TIMEOUT_SECONDS=600" >> $GITHUB_ENV
        
    - name: Create service account key file
      run: |
        echo '${{ secrets.GCP_SERVICE_ACCOUNT_KEY_PROD }}' > /tmp/service-account.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/service-account.json" >> $GITHUB_ENV
        
    - name: dbt deps
      run: |
        cd dbt/stripe_analytics
        dbt deps
        
    - name: dbt build (production)
      run: |
        cd dbt/stripe_analytics
        dbt build
        
    - name: dbt docs generate
      run: |
        cd dbt/stripe_analytics
        dbt docs generate
        
    - name: Clean up
      if: always()
      run: |
        rm -f /tmp/service-account.json
        
    - name: Notify deployment success
      if: success()
      run: |
        echo "✅ Production deployment successful!"
        echo "Models deployed to stripe_prod dataset"
        
    - name: Notify deployment failure
      if: failure()
      run: |
        echo "❌ Production deployment failed!"
        echo "Check the logs above for details" 